name: Build, Push and Release Docker Image

on:
  push:
    branches:
      - master
  pull_request:
    branches:
      - master

jobs:
  build-and-push:
    runs-on: ubuntu-latest
    steps:
    - name: Checkout Repository
      uses: actions/checkout@v2

    - name: Bump version and push tag
      id: tag_version
      uses: mathieudutour/github-tag-action@v6.1
      with:
        github_token: ${{ secrets.GITHUB_TOKEN }}
        default_bump: false

    - name: Check if tag version changed
      id: check-version
      run: |
        if [ "" == "${{ steps.tag_version.outputs.new_tag }}" ]; then
          echo "Version did not change"
          echo "SKIP_BUILD=true" >> $GITHUB_ENV
        fi

    - name: Set up Docker Buildx
      if: env.SKIP_BUILD != 'true'
      uses: docker/setup-buildx-action@v1

    - name: Login to Docker Hub
      if: env.SKIP_BUILD != 'true'
      uses: docker/login-action@v1
      with:
        username: ${{ secrets.DOCKERHUB_USERNAME }}
        password: ${{ secrets.DOCKERHUB_PASSWORD }}

    - name: Build and Push Docker Image
      if: env.SKIP_BUILD != 'true'
      uses: docker/build-push-action@v2
      with:
        push: true
        tags: qiaodeli111/aliyun-sambert-invoke:${{ steps.tag_version.outputs.new_tag }}

    - name: Update docker-compose.yml
      if: env.SKIP_BUILD != 'true'
      run: |
        sed -i "s|image: qiaodeli111/aliyun-sambert-invoke:.*|image: qiaodeli111/aliyun-sambert-invoke:${{ steps.tag_version.outputs.new_tag }}|" docker-compose.yml
        git config --local user.email "action@github.com"
        git config --local user.name "GitHub Action"
        git add docker-compose.yml
        git commit -m "Update docker-compose.yml version to ${{ steps.tag_version.outputs.new_tag }}"
        git push

    - name: Create a GitHub release
      if: env.SKIP_BUILD != 'true'
      uses: ncipollo/release-action@v1
      with:
        tag: ${{ steps.tag_version.outputs.new_tag }}
        name: Release ${{ steps.tag_version.outputs.new_tag }}
        body: "Release of version ${{ steps.tag_version.outputs.new_tag }}"
        token: ${{ secrets.GITHUB_TOKEN }}
